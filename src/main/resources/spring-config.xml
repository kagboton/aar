<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
http://www.springframework.org/schema/tx
http://www.springframework.org/schema/tx/spring-tx-2.0.xsd">

    <!-- Chargement d'un fichier de properties pour la persistence.config JDBC (driver, login,...) -->
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer" >
        <property name="locations" value="classpath:jdbc3.properties" />
    </bean>


    <!-- couches applicatives : DAO -->
    <bean id="clientDao" class="persistence.dao.jpa.ClientDaoImpl"/>
    <bean id="compteDao" class="persistence.dao.jpa.CompteDaoImpl"/>
    <bean id="livretDao" class="persistence.dao.jpa.LivretDaoImpl"/>

    <!-- couches applicatives (injection par constructeur): facade session, persistence.service -->
    <bean id="banqueService" class="persistence.service.BanqueServiceImpl">
        <constructor-arg index="0" ref="clientDao"/>
        <constructor-arg index="1" ref="compteDao"/>
        <constructor-arg index="2" ref="livretDao"/>
    </bean>

    <!-- Loading JPA -->
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="packagesToScan" value="persistence.beans" />
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
        </property>
        <property name="jpaProperties">
            <props>
                <prop key="hibernate.dialect">
                    org.hibernate.dialect.MySQLDialect</prop>
                <prop key="hibernate.hbm2ddl.auto">create</prop>
                <prop key="hibernate.connection.release_mode">after_transaction</prop>
                <prop key="hibernate.show_sql">false</prop>
            </props>
        </property>
        <property name="loadTimeWeaver">
            <bean class="org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver" />
        </property>
    </bean>

    <!--&lt;!&ndash; la source de données MySQL &ndash;&gt;-->
    <!--<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">-->
        <!--<property name="driverClassName" value="com.mysql.jdbc.Driver" />-->
        <!--<property name="url" value="${jdbc.url}" />-->
        <!--<property name="username" value="${jdbc.username}" />-->
        <!--<property name="password" value="${jdbc_password}" />-->
    <!--</bean>-->



    <!-- la source de données MySQL -->
    <bean id="dataSource" class=
            "org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver" />
        <property name="url" value="jdbc:mysql://localhost:3306/banque?useSSL=false" />
        <property name="username" value="root" />
        <property name="password" value="root" />
    </bean>

    <!-- le gestionnaire de transactions - ceci permet de gérer les transactions pour nous au lieu de les faire partout  -->
    <tx:annotation-driven transaction-manager="txManager" />
    <bean id="txManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
    </bean>

    <!--traduction des exceptions-->
    <bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />

    <!--persistence-->
    <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />


</beans>